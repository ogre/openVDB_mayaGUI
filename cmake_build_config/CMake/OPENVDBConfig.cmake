IF( OPENVDB_INCLUDE_DIRS AND OPENVDB_LIBRARIES )
  SET( OPENVDB_FIND_QUIETLY TRUE )
ENDIF( OPENVDB_INCLUDE_DIRS AND OPENVDB_LIBRARIES )

SET ( OPENVDB_ROOT $ENV{OPENVDB_ROOT} )
message ( "OPENVDB_ROOT:" ${OPENVDB_ROOT} )

find_path(OPENVDB_INCLUDE_DIRS NAMES openvdb/openvdb.h HINTS "${OPENVDB_ROOT}/include" )
message ( "OPENVDB_INCLUDE_DIRS:" ${OPENVDB_INCLUDE_DIRS} )

set ( __LIB_DIR_HINTS "${OPENVDB_ROOT}/lib" )

#assume static libs
if(WIN32)
	FIND_LIBRARY( OPENVDB_LIB NAMES libopenvdb.lib PATHS ${__LIB_DIR_HINTS} NO_DEFAULT_PATH )
else()
	FIND_LIBRARY( OPENVDB_LIB NAMES libopenvdb.a PATHS ${__LIB_DIR_HINTS} NO_DEFAULT_PATH )
endif(WIN32)


set( OPENVDB_LIBRARIES ${OPENVDB_LIB} )
#ADD_DEFINITIONS ( -DOPENVDB_3_ABI_COMPATIBLE )

message ( "OPENVDB_LIBRARIES:" ${OPENVDB_LIBRARIES} )

get_filename_component( OPENVDB_LIBRARY_DIRS ${OPENVDB_LIB} PATH )

INCLUDE( FindPackageHandleStandardArgs )
FIND_PACKAGE_HANDLE_STANDARD_ARGS( OPENVDB DEFAULT_MSG OPENVDB_LIBRARIES OPENVDB_LIBRARY_DIRS OPENVDB_INCLUDE_DIRS )

#MARK_AS_ADVANCED( OPENVDB_INCLUDE_DIRS OPENVDB_LIBRARIES )